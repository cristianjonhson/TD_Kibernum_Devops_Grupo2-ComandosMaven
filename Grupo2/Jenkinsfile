pipeline {
    agent any
    
    environment {
        // Define el SonarQube server a utilizar
        // SONARQUBE_URL = 'http://localhost:9000'
        scannerHome = tool 'sonarqube-10.6.0.92116'
    }
    
    stages {
        stage('Build') {
            steps {
                // Comandos de construcción
                sh 'mvn -f Grupo2/pom.xml clean install'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                // Ejecutar el análisis de SonarQube
                withSonarQubeEnv('sonarqube-10.6.0.92116') {
                    sh 'mvn -f Grupo2/pom.xml clean verify sonar:sonar \
                    -Dsonar.projectKey=ComandosMaven \
                    -Dsonar.projectName="ComandosMaven" \
                    -Dsonar.host.url=http://localhost:9000 \
                    -Dsonar.token=sqp_4fbd067319369be51143812de7acab21f4ff65d3'
                }
            }
        }
        
        stage('Quality Gate') {
            steps {
                script {
                    // Verificar la calidad del código
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }
}
